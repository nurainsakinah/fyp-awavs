from flask import Flask, render_template, request
import scanner
import sqli_scanner
import csrf_scanner
import xss_scanner
from colorama import Fore, init

init(autoreset=True)

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/scan', methods=['POST'])
def scan():
    target_url = request.form['url'].strip()
    if not target_url.endswith('/'):
        target_url += '/'
    
    scan = scanner.Scanner(target_url)

    scan.crawl()

    scan_xss = xss_scanner.xss_scanner(scan.session)
    scan_csrf = csrf_scanner.csrf_scanner(scan.session)
    scan_sqli = sqli_scanner.sqli_scanner(scan.session)

    results = []

    for link in scan.target_links:
        result = {}
        result['link'] = link
        result['xss_result'] = scan_xss.run_xss_test(link)
        result['csrf_result'] = scan_csrf.run_csrf_test(link)
        result['sqli_result'] = scan_sqli.run_sqli_test(link)
        results.append(result)

    if scan_xss.count_xss == 0 and scan_csrf.count_csrf == 0 and scan_sqli.count_sqli == 0:
        summary = 'The application is not vulnerable for the scanned vulnerabilities.'
    else:
        summary = (
            f'1. XSS Vulnerability: {Fore.RED}{scan_xss.count_xss}\n'
            f'2. CSRF Vulnerability: {Fore.RED}{scan_csrf.count_csrf + scan_xss.count_xss}\n'
            f'3. SQLI Vulnerability: {Fore.RED}{scan_sqli.count_sqli}'
        )

    return render_template('result.html', results=results, summary=summary)


if __name__ == '__main__':
    app.run(debug=True)
